openapi: 3.1.0
info:
  title: API Reportes IA
  version: 0.1.0
paths:
  /reports/:
    post:
      tags:
      - reports
      summary: Crear Reporte
      operationId: crear_reporte_reports__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /auth/get-token:
    post:
      tags:
      - Autenticacion
      summary: Get Token
      operationId: get_token_auth_get_token_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/create-account:
    post:
      tags:
      - Autenticacion
      summary: Create Acount
      description: 'Crear cuenta: recibir email/password en el body JSON para no exponerlos
        en la URL.'
      operationId: create_acount_auth_create_account_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Acount Auth Create Account Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/verify-token:
    get:
      tags:
      - Autenticacion
      summary: Verify Token
      description: 'Verifica que el token en Authorization: Bearer <token> sea válido
        y devuelve el User.


        - Si el token es válido devuelve 200 y el modelo User.

        - Si no lo es, `jwt_scheme` ya lanzará HTTPException con 401.'
      operationId: verify_token_auth_verify_token_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - HTTPBearer: []
  /openapi.yaml:
    get:
      tags:
      - Documentacion
      summary: Get Openapi Yaml
      description: Descargar OpenAPI en YAML
      operationId: get_openapi_yaml_openapi_yaml_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    AuthTokenResponse:
      properties:
        access_token:
          type: string
          title: Access Token
          description: Token JWT de acceso
        token_type:
          type: string
          title: Token Type
          description: Tipo de token de autenticación
          default: bearer
      type: object
      required:
      - access_token
      title: AuthTokenResponse
      description: Respuesta con el token de autenticación.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LoginRequest:
      properties:
        email:
          type: string
          title: Email
          description: Correo del usuario
        password:
          type: string
          title: Password
          description: Contraseña del usuario
      type: object
      required:
      - email
      - password
      title: LoginRequest
      description: Modelo para el login (email y password)
    ReportRequest:
      properties:
        prompt:
          type: string
          title: Prompt
          description: Texto para generar el reporte
      type: object
      required:
      - prompt
      title: ReportRequest
      description: Solicitud para generar un reporte.
    ReportResponse:
      properties:
        report:
          type: string
          title: Report
          description: Contenido del reporte generado
      type: object
      required:
      - report
      title: ReportResponse
      description: Respuesta con el reporte generado.
    User:
      properties:
        id:
          type: string
          title: Id
          description: Identificador único del usuario
        email:
          type: string
          title: Email
          description: Correo electrónico del usuario
      type: object
      required:
      - id
      - email
      title: User
      description: Modelo de usuario del sistema.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
