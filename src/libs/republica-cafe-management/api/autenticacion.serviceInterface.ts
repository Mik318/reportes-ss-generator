/**
 * API Reportes IA
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AuthTokenResponse } from '../model/models';
import { HTTPValidationError } from '../model/models';
import { LoginRequest } from '../model/models';
import { RefreshRequest } from '../model/models';
import { User } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface AutenticacionServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Create Acount
     * Crear cuenta: recibir email/password en el body JSON para no exponerlos en la URL.
     * @param loginRequest 
     */
    createAcountAuthCreateAccountPost(loginRequest: LoginRequest, extraHttpRequestParams?: any): Observable<any>;

    /**
     * Get Token
     * 
     * @param loginRequest 
     */
    getTokenAuthGetTokenPost(loginRequest: LoginRequest, extraHttpRequestParams?: any): Observable<AuthTokenResponse>;

    /**
     * Refresh Token
     * Renueva tokens a partir de un refresh_token proporcionado por el cliente.  Seguridad: este endpoint acepta el refresh_token en el body JSON. En producci칩n puedes preferir enviar refresh tokens en cookies HttpOnly para mayor seguridad.
     * @param refreshRequest 
     */
    refreshTokenAuthRefreshTokenPost(refreshRequest: RefreshRequest, extraHttpRequestParams?: any): Observable<AuthTokenResponse>;

    /**
     * Verify Token
     * Verifica que el token en Authorization: Bearer &lt;token&gt; sea v치lido y devuelve el User.  - Si el token es v치lido devuelve 200 y el modelo User. - Si no lo es, &#x60;jwt_scheme&#x60; ya lanzar치 HTTPException con 401.
     */
    verifyTokenAuthVerifyTokenGet(extraHttpRequestParams?: any): Observable<User>;

}
